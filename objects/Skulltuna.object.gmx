<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSkulltuna</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate
event_inherited();
var i = 0;
timer = 0;
freq = 8;
amp = .05;
var total = ds_list_size(global.enemyList);
x = (room_width/2) - ((total-1)*80) + (instance*160);
y = room_height/4 + 100;
anchorX = x;
anchorY = y;
hpDisplayOffset = 140;
speechY = -200;

//Stats
name = "Skulltuna";
maxHP = 200;
hp = maxHP;
deadSprite = sprSkulltunaDead;
spareSprite = sprSkulltunaSpare;

//Moveset
var i = 0;
moves = 0;
moves[i,0] = skull_attack_1;  //Copy from here
moves[i,1] = 200;
moves[i,2] = 130;
moves[i,3] = 320;
moves[i,4] = 320;
i++;     

//Actset
acts = 0;
acts[0,0] = "Check";
acts[0,1] = "Skulltuna - 99 ATK 99 DEF#* You have to kill it.";
acts[0,2] = act_null;
acts[1,0] = "CSGO";
acts[1,1] = "You ask to play CSGO with him.";
acts[1,2] = act_null;
acts[2,0] = "Skype";
acts[2,1] = "You asked to skype the Tuna.";
acts[2,2] = act_null;

//Openers
opener = 0;
opener[0] = "ROAN attacks!";
opener[1] = "the rel rohan111";
opener[2] = "bad times";

//Flavor
flavor = 0;
flavor[0] = "Hey, how are you?";
flavor[1] = "I'm good.";
flavor[2] = "What did you have for dinner?";
flavor[3] = "Bepis. WTF";

//Responses
response = 0;
response[0] = "yes ma'am.";
response[1] = "i want a#refund.";
response[2] = "there's a#bee in#my sock.";
response[3] = "wowie";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advance the turn
if BattleWindowCont.state = 0 &amp;&amp; ready = 1 &amp;&amp; instance = 0 &amp;&amp; instance_number(SpeechBubble) = 0
{
    ready = 0;
    with TurnCont
    {
        event_user(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Taking damage
if shake &gt; 0.2
{
    shake_time++;
    x = anchorX + sin(degtorad(shake_time * 75)) * shake;
    shake *= .9;
}
else
{
    shake_time = 0;
    shake = 0;
    x = anchorX;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>213</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music_battle</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music_battle</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>213</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music_meglo</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>music_meglo</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt to choose attack

//By default, your monster randomly chooses any of the attacks it has in the moves[] array.

//You can override this with special conditions!
var options = array_height_2d(moves) - 1;
attack_i = irandom(options);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt for flavor text

//By default flavor text is randomly selected from the flavor[] array.

//You can place special conditions here to override this, check some of the example enemies for ideas!
PlayerMenuCont.mainText = flavor[irandom(array_length_1d(flavor) - 1)];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt for response
if count = 0
{
    count = 1;
    if global.lastTarget = id
    {
        if global.lastAction = "miss"
        {
            scrSpeechBubble("Nice shot#;)","(idiot)");
        }
        else if global.lastAction = "CSGO"
        {
            scrSpeechBubble("nope, tf2#is better.");
        }
        else if global.lastAction = "Skype"
        {
            scrSpeechBubble("srry utube");
        }
        else
        {
            scrSpeechBubble(response[irandom(array_length_1d(response) - 1)]);
        }
    }
    else
    {
        scrSpeechBubble(response[irandom(array_length_1d(response) - 1)]);
    }
}
else
{
    count = 0;
    ready = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack

//By default, the enemy is prompted to attack and then runs the associated timeline of that attack.
//You can safely delete this event and draw it from the base object Enemy.
timeline_index = moves[attack_i,0];
timeline_position = 0;
timeline_running = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

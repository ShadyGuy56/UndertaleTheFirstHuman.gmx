<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>TurnCont</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

This object controls the turn order!
Whenever this object runs event_user(0), the turn begins transitioning from either the player's to the enemy's.
It also plays the music!
*/
enum TURN {player, enemy};

enum STATE {init, transition, idle
};

global.turn = 0;
turn = TURN.player;
state = STATE.init;

instance_create(0,0,PlayerHeart);

with PlayerMenuCont
{
    page_init();
    with TextBox
    {
        instance_destroy();
    }
    var i = 0;
    for (i=0;i&lt;instance_number(Enemy);i++)
    {
        with instance_find(Enemy, i)
        {
            event_user(4);
        }
        var textInstance = instance_create(50, 270 + 32 * i, TextBox);
        with textInstance
        {
            text[0] = "* "+string(other.mainText);
        }
    }
}

PlayerHeart.visible = 1;
with PlayerMenuCont
{
    x_index = 0;
    y_index = 0;
    page = 0;
    load_menu_nav(page);
    active = 1;
}

music = audio_play_sound(music_battle,0,true);
audio_sound_gain(music, .5, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End transition, begin turn
if turn = TURN.player
{
    PlayerHeart.visible = 1;
    with PlayerMenuCont
    {
        player_turn_init();
        x_index = lastMenuChoice;
        y_index = 0;
        page = 0;
        load_menu_nav(page);
        active = 1;
    }
}
else if turn = TURN.enemy
{
    PlayerHeart.active = 1;
    var targ = instance_find(Enemy,0)
    if global.lastTarget != GlobalCont.id
    {
        targ = global.lastTarget;
    }
    with targ
    {
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Next Turn
if turn = TURN.player
{
    global.turn++;
    //Begin transition to enemy turn
    with TextBox
    {
        instance_destroy();
    }

    with PlayerMenuCont
    {
        active = 0;
    }
    turn = TURN.enemy;
    state = STATE.transition;
    var targ = instance_find(Enemy,0)
    if global.lastTarget != GlobalCont.id
    {
        targ = global.lastTarget;
    }
    with targ
    {
            event_user(3);
            with BattleWindowCont
            {
                event_user(0);
                targetWidth = other.moves[other.attack_i, 1];
                targetHeight = other.moves[other.attack_i, 2];
            }
    }
    var enemyInControl = instance_find(Enemy, 0);
    PlayerHeart.x = enemyInControl.moves[enemyInControl.attack_i,3];
    PlayerHeart.y = enemyInControl.moves[enemyInControl.attack_i,4];
    PlayerHeart.visible = 1;
    with Enemy
    {
        
        event_user(1);
    }
}
else if turn = TURN.enemy
{
    //Begin transition to player turn
    turn = TURN.player;
    state = STATE.transition;
    PlayerHeart.visible = 0;
    PlayerHeart.active = 0;
    with EnemyAttack
    {
        instance_destroy();
    }
    
    with BattleWindowCont
    {
        targetWidth = 564;
        targetHeight = 130;
        event_user(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(music);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

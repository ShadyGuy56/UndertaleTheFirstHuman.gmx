<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCactus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate
event_inherited();
var total = ds_list_size(global.enemyList);
x = (room_width/2) - ((total-1)*80) + (instance*160);
y = room_height/4+120;
anchorX = x;
anchorY = y;
hpDisplayOffset = 60;
var i = 0;
timer = 0;
freq = 4;
amp = 8;
image_xscale = 3;
image_yscale = 3;
arm1x = 0;
arm1y = 0;
arm2x = 0;
arm2y = 0;
emotion = 0;
dialogue_tree = 0;
accuracy = 1;
intensity = 2;
speechY = -200;
speechi = 0;
animationState = 0;
scaleSpeed = 0;
scaleAccel = -0.05;

//Stats
fleeable = 1;
name = "Sagarcella";
maxHP = 65;
hp = maxHP;
deadSprite = sprCactusDead;
spareSprite = sprCactusSpare;

//Speech
lifetime = 0;
wiggle = 0;
text_speed = 1;

//Moveset
moves = 0;
moves[0,0] = sagarcella_attack_1;
moves[0,1] = 250;
moves[0,2] = 130;
moves[0,3] = 320;
moves[0,4] = 375;
i++;
moves[i,0] = sagarcella_attack_2;
moves[i,1] = 250;
moves[i,2] = 130;
moves[i,3] = 320;
moves[i,4] = 320;
i++;
moves[i,0] = sagarcella_attack_3;
moves[i,1] = 80;
moves[i,2] = 130;
moves[i,3] = 320;
moves[i,4] = 295;
i++;

//Openers
opener = 0;
opener[0] = "A cactus begins yelling at you!";

//Actset
acts = 0;
i = 0;
acts[i,0] = "Check";
acts[i,1] = "SAGARCELLA - 12 ATK 12 DEF#* This monster seems pretty peeved.";
acts[i,2] = act_null;
i++;
acts[i,0] = "Spare?";
acts[i,1] = "Sagarcella became instantly#sparable,[w:5] for some reason!";
acts[i,2] = act_sagarcella_spare;
i++;

//Flavor
flavor = 0;
flavor[0] = "That cactus attacked us!";
flavor[1] = "Cactus flavored doom washes#over you.";
flavor[2] = "You're green now.";

geno_flavor[0] = "Sagarcella seems to be regretting#her decisions.";
geno_flavor[1] = "Sagarcella is leaking.";
geno_flavor[2] = "Do you still want to go through#with this?";

neutral_flavor[0] = "Steamed cactus.";
neutral_flavor[1] = "Sagarcella prickles up.";
neutral_flavor[2] = "That cactus attacked us!";
neutral_flavor[3] = "Sagarcella adjusts her flower.";
neutral_flavor[4] = "Is it getting succulent in here,[w:10]#or is it just me?";

manic_flavor[0] = "Sagarcella blinks nervously.";
manic_flavor[1] = "Sagarcella hesitates.##[w:20]* For a moment.";
manic_flavor[2] = "Sagarcella is twitching a little.";

//Responses
response = 0;
response[0] = "I spent all morning#arranging those#flowers!";
response[1] = "And you just go and...[w:10]#trod on them!";
response[2] = "It's not easy, you#know. Being a cactus...";
response[3] = "Someone needs to#fix this mess...";
response[4] = "This will hurt you#a lot more than it#will hurt me!";
response[5] = "This will hurt you#a lot more than it#will hurt me!";
response[6] = "Why don't you just give#up?";
response[7] = "Go on,[w:5] quit!";
response[8] = "You'd better replant#those flowers!";
response[9] = "Your stupid legs#won't save you now!";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animationState = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION
event_inherited();
if timer * freq &lt; 359
{
    timer++;
}
else
{
    timer = 0;
}

if animationState = 0
{
    arm1x = (sin(degtorad((timer-10) * freq)) * amp/3);
    arm1y = (sin(degtorad((timer-10) * freq)) * amp);
    
    arm2x = -(sin(degtorad((timer-10) * freq)) * amp/3);
    arm2y = (sin(degtorad((timer-10) * freq)) * amp);
    
    scaling = -(sin(degtorad((timer) * freq)) * .1);
}
else
{
    scaling += scaleSpeed;
    scaleSpeed += scaleAccel;
    arm1x = amp*scaling/3;
    arm1y = -amp*scaling;
    arm2x = -amp*scaling/3;
    arm2y = -amp*scaling;
    if scaling &lt; -.25
    {
        timer = 0;
        scaling = -.25;
        animationState = 2;
        scaleAccel = 0;
        scaleSpeed = 0;
        alarm[0] = 30;
        var inst = instance_create(0,0,BlueSwipe);
        inst.fallSPD = 20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle emotion changes

//BEING ATTACKED
if shake != 0
{
    dialogue_tree = 2;
    if hp &lt; maxHP/3
    {
        if emotion != 3
        {
            speechi = 0;
        }
            emotion = 3;
    }
    else if hp &lt; 2*maxHP/3
    {
        if emotion != 2
        {
            speechi = 0;
        }
        emotion = 2;
    }
    else
    {
        if emotion != 1
        {
            speechi = 0;
        }
        emotion = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bite animation
animationState = 1;
scaling = 0;
scaleSpeed = 0.2;
scaleAccel = -0.02;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt for opening statement
PlayerMenuCont.mainText = opener[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt to choose attack
if global.turn = 1
{
    attack_i = 0;
}
else if global.turn = 2
{
    attack_i = 1;
}
else if dialogue_tree = 0
{
    attack_i = 2;
}
else
{
    attack_i = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt for flavor text
if global.turn &lt; 4 &amp;&amp; global.lastAction != "Spare?"
{
    PlayerMenuCont.mainText = flavor[global.turn - 1];
}
else
{
    if emotion = 0
    {
        PlayerMenuCont.mainText = neutral_flavor[irandom(array_length_1d(neutral_flavor) - 1)];
    }
    else if emotion = 3
    {
        PlayerMenuCont.mainText = geno_flavor[2];
    }
    else if emotion = 1 || emotion = 2
    {
        PlayerMenuCont.mainText = geno_flavor[irandom(1)];
    }
    else
    {
        PlayerMenuCont.mainText = manic_flavor[irandom(array_length_1d(manic_flavor)-1)];
    }
    
    if global.lastAction = "Spare?"
    {
        PlayerMenuCont.mainText = "Sagarcella tries to ignore the#shattered fourth wall.";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt for response
var text;
if count = 0
{
    count = 1;
    switch (dialogue_tree)
    {
        case 0: //NEUTRAL ROUTE
            if global.turn &lt; 3 &amp;&amp; speechi = 0
            {
                text = response[global.turn - 1];
            }
            else
            {
                if global.turn = 3
                {
                    if speechi = 0
                    {
                        emotion = 4;
                        text = "It's not easy,[w:5]#you know...[w:15]#Being a cactus...";
                        speechi++;
                        count = 0;
                    }
                    else if speechi = 1
                    {
                        text = "Crammed into a pot...[w:15]#unable to move...";
                        speechi++;
                        count = 0;
                    }
                    else
                    {
                        emotion = 5;
                        freq = 8;
                        text = "How about you#[c:c_green]learn how#it feels?";
                    }
                }
                else
                {
                    text = response[irandom(4)+5];
                }
            }
            break;
        case 1: //MERCY ROUTE
            if speechi = 0
            {
                text = "Well,[w:5] that's#unfinished bosses#for you...";
                speechi++;
            }
            else
            {
                text = "Uhh...#[w:10] I got nothing.";
            }
        case 2: //KILLING ROUTE
            if emotion = 1
            {
                if speechi = 0
                {
                    text = "Ow-OW![w:10] I just wanted#to talk!";
                    accuracy = 2;
                    intensity = 3;
                    speechi++;
                }
                else
                {
                    text = "H-[w:5]hang on![w:10]  Let's be reasonable!";
                }
            }
            else if emotion = 2
            {
                if speechi = 0
                {
                    text = "I'm sorry![w:10]#I didn't mean to make you#so angry!";
                    accuracy = 3;
                    intensity = 5;
                    speechi++;
                }
                else
                {
                    text = "I just wanted people to appreciate my work!";
                }
            }
            else if emotion = 3
            {
                if speechi = 0
                {
                    text = "I see...";
                    speechi++;
                    accuracy = 7;
                    intensity = 8;
                    speechi++;
                }
                else
                {
                    text = "Go on then.[w:10]#You've clearly made#up your mind.";
                }
            }
            break;
    }
    scrSpeechBubble(text);
}
else
{
    count = 0;
    ready = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current != 0
{   
    exit;
}
if animationState = 0
{
    draw_sprite_ext(sprCactus,1,round(x) + arm2x,round(y) + arm2y,image_xscale,image_yscale,image_angle,image_blend,draw_get_alpha());
    draw_sprite_ext(sprCactus,2+emotion,round(x),round(y),image_xscale,image_yscale+scaling,image_angle,image_blend,draw_get_alpha());
    draw_sprite_ext(sprCactus,0,round(x) + arm1x,round(y) + arm1y,image_xscale,image_yscale,image_angle,image_blend,draw_get_alpha());
}
else
{
    draw_sprite_ext(sprCactus,1,round(x) + arm2x,round(y) + arm2y,image_xscale,image_yscale,image_angle,image_blend,draw_get_alpha());
    draw_sprite_ext(sprCactus,11+animationState,round(x),round(y),image_xscale,image_yscale+scaling,image_angle,image_blend,draw_get_alpha());
    draw_sprite_ext(sprCactus,0,round(x) + arm1x,round(y) + arm1y,image_xscale,image_yscale,image_angle,image_blend,draw_get_alpha());

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

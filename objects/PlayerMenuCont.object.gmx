<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* This object controls the menu in battle!  */
/* It controls navigating the heart around, pressing buttons, and moving back */


/*
    Page 0 = Select subpage
    Page 1 = FIGHT - select target
    Page 2 = ACT - select target
    Page 3 = ITEM - select item
    Page 4 = MERCY - select option
    Page 5 = ACT - select action
*/
lastMenuChoice = 0;
name = "CHARA";
level = 1;
maxHP = GlobalCont.maxHP;
hp = GlobalCont.hp;
x_index = 0;
y_index = 0;
page = 0;
page_ii = 0;
page_length = 1;
mainText = 0;
fleeable = 0;
active = 1;
fightX = 32;
actX = 185;
itemX = 345;
mercyX = 500;
inst = 0;
def = 0;

load_menu_nav(page);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu navigation
if active = 0
{
    exit;
}

if KeyCont.key_right[0] = 1
{
    if page = 0
    {
        audio_play_sound(sndOptionMove,0,false);
    }
    if array_length_2d(nav,0) - 1 &gt; x_index
    {
        if nav[y_index, x_index + 1] = 1
        {
            x_index += 1;
        }
        else
        {
            if page = 3 &amp;&amp; page_ii = page_length - 1
            {
                page_ii = 0;
                page_init();
            }
        }
    }
    else
    {
        if page = 3
        {
            if page_ii = page_length - 1
            {
                page_ii = 0;
            }
            else
            {
                y_index = 0;
                page_ii++;
            }
            
            page_init();
        }
            x_index = 0;
    }
}

if KeyCont.key_left[0] = 1
{
    if page = 0
    {
        audio_play_sound(sndOptionMove,0,false);
    }
    if x_index &gt; 0
    {
        if nav[y_index, x_index - 1] = 1
        {
            x_index -= 1;
        }
    }
    else
    {
        if page = 3
        {
            if page_ii = 0
            {
                //page_ii = page_length - 1;
            }
            else
            {
                page_ii--;
                x_index = 1;
            }
            
            page_init();
        }
        x_index = array_length_2d(nav,0)-1;
        while nav[y_index,x_index] = 0
        {
            x_index--;
        }
    }
}

if KeyCont.key_up[0] = 1
{
    if y_index &gt; 0
    {
        if nav[y_index - 1, x_index] = 1
        {
            y_index -= 1;
        }
    }
    else
    {
        y_index = array_height_2d(nav) - 1;
        while nav[y_index, x_index] = 0
        {
            y_index--;
        }
    }
}

if KeyCont.key_down[0] = 1
{
    if y_index &lt; array_height_2d(nav) - 1
    {
        if nav[y_index + 1, x_index] = 1
        {
            y_index += 1;
        }
        else
        {
            y_index = 0;
        }
    }
    else
    {
        y_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selecting
if KeyCont.key_primary[0] = 1
{
    audio_play_sound(sndOptionSelect,0,false);
    if page = 0
    {
        if x_index = 2 &amp;&amp; ds_list_size(global.inventory) = 0
        {
            exit;
        }
        with TextBox
        {
            instance_destroy();
        }
        lastMenuChoice = x_index;
        page_ii = 0;
        page = x_index + 1;
        x_index = 0;
        y_index = 0;
        page_init();
    } else if page = 1
    {
        target = instance_find(Enemy, y_index);
        global.lastTarget = target;
        PlayerHeart.visible = 0;
        with TextBox
        {
            instance_destroy();
        }
        
        inst = instance_create(320,320,PlayerAttackCont);
        inst.target = target;
        active = 0;
        y_index = 0;
    }  else if page = 2
    {
        target = instance_find(Enemy, y_index);
        global.lastTarget = target;
        page = 5;
        y_index = 0;
        
        page_init();
        
        var a = 0;
        var b = 0;
        var i = 0;
        for (i=0;i&lt;array_height_2d(target.acts);i++)
        {
            if a &gt; 1
            {
                a = 0;
                b++;
            }
            inst = instance_create(a*255+100,b*32+270,TextBox);
            with inst
            {
                text[0] = "* " + string(other.target.acts[a+(2*b),0]);
                instant = 1;
                event_user(0);
            }
            
            a++;
        }
    }
    else if page = 3
    {
        with TextBox
        {
            instance_destroy();
        }
        active = 0;
        PlayerHeart.visible = 0;
        inst = instance_create(50,270,TextBox);
        var i = ds_list_find_value(global.inventory, x_index + 2 * y_index + 4 * page_ii);
        inst.text[0] = "* "+getItemFlavor(i);
        global.lastTarget = GlobalCont.id;
        global.lastAction = getItemName(i);
        inst.controllable = 1;
        instance_create(0,0,PlayerActCont);
        script_execute(asset_get_index(getItemName(ds_list_find_value(global.inventory,x_index + 2*y_index + 4 * page_ii))));
        ds_list_delete(global.inventory,x_index + 2*y_index + 4*page_ii);
    }
    else if page = 4
    {
        global.lastTarget = GlobalCont.id;
        if y_index = 0
        {
            global.lastAction = "spare";
            with Enemy
            {
                if sparable = 1
                {
                    instance_destroy();
                }
            }
            active = 0;
            if instance_number(Enemy) = 0
            {
                PlayerHeart.visible = 0;
                with TextBox
                {
                    instance_destroy();
                }
                instance_create(0,0,VictoryObject);
            }
            else
            {
                advanceTurn();
            }
        }
        else
        {
            global.lastAction = "flee";
            fleeable = 1;
            with Enemy
            {
                if fleeable = 0
                {
                    other.fleeable = 0;
                }
            }
            if PlayerHeart.currentState = PLAYER_STATE.green
            {
                fleeable = 0;
            }
            if fleeable = 1
            {
                timeline_index = flee;
                timeline_position = 0;
                timeline_running = true;
            }
            else
            {
                active = 0;
                PlayerHeart.visible = 0;
                with TextBox
                {
                    instance_destroy();
                }
                instance_create(0,0,NoRunObject);
            }
        }
    }
    else if page = 5
    {
        with TextBox
        {
            instance_destroy();
        }
        active = 0;
        PlayerHeart.visible = 0;
        inst = instance_create(50,270,TextBox);
        inst.text[0] = "* "+target.acts[x_index + 2 * y_index,1];
        global.lastAction = target.acts[x_index + 2 * y_index,0];
        inst.controllable = 1;
        instance_create(0,0,PlayerActCont);
        with target
        {
            script_execute(acts[other.x_index + 2 * other.y_index, 2]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Backing Out
if active = 0
{
    exit;
}
if page != 0
{
    if KeyCont.key_secondary[0] = 1
    {
        if page = 5
        {
            page = 2;
            x_index = 0;
            y_index = 0;
            page_init();
        }
        else
        {
            var temp = page;
            page = 0;
            y_index = 0;
            page_init();
            x_index = temp - 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Align heart
if active = 0
{
    exit;
}
var heart_height = 454;
var heart_offset = 16;
if page = 0
{
    PlayerHeart.y = heart_height;
    if x_index = 0
    {
        PlayerHeart.x = fightX + heart_offset;
    }
    
    if x_index = 1
    {
        PlayerHeart.x = actX + heart_offset;
    }
    
    if x_index = 2
    {
        PlayerHeart.x = itemX + heart_offset;
    }
    
    if x_index = 3
    {
        PlayerHeart.x = mercyX + heart_offset;
    }
}
else if page = 1 || page = 2
{
        PlayerHeart.x = 72;
        PlayerHeart.y = (y_index * 32) + 286;
}
else if page = 3 || page = 4 || page = 5
{
    PlayerHeart.x = (x_index * 259) + 72;
    PlayerHeart.y = (y_index * 32) + 286;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(bit);
draw_set_color(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw primary screen
var button_height = 432;
if active = 0
{
    draw_sprite(spr_button_fight, 1, fightX, button_height);
    draw_sprite(spr_button_act, 1, actX, button_height);
    draw_sprite(spr_button_item, 1, itemX, button_height);
    draw_sprite(spr_button_mercy, 1, mercyX, button_height);
    draw_name_level(30, 400, 93);
    draw_hp(275, 400, 25);
    exit;
}
else
{
    if page = 0
    {
        if x_index = 0
        {
            draw_sprite(spr_button_fight, 2, fightX, button_height);
        }
        else
        {
            draw_sprite(spr_button_fight, 1, fightX, button_height);
        }
        
        if x_index = 1
        {
            draw_sprite(spr_button_act, 2, actX, button_height);
        }
        else
        {
            draw_sprite(spr_button_act, 1, actX, button_height);
        }
        
        if x_index = 2
        {
            draw_sprite(spr_button_item, 2, itemX, button_height);
        }
        else
        {
            draw_sprite(spr_button_item, 1, itemX, button_height);
        }
        
        if x_index = 3
        {
            draw_sprite(spr_button_mercy, 2, mercyX, button_height);
        }
        else
        {
            draw_sprite(spr_button_mercy, 1, mercyX, button_height);
        }
    }
    else
    {
        if page = 1
        {
            draw_sprite(spr_button_fight, 2, fightX, button_height);
            draw_sprite(spr_button_act, 1, actX, button_height);
            draw_sprite(spr_button_item, 1, itemX, button_height);
            draw_sprite(spr_button_mercy, 1, mercyX, button_height);
        }else if page = 2
        {
            draw_sprite(spr_button_fight, 1, fightX, button_height);
            draw_sprite(spr_button_act, 2, actX, button_height);
            draw_sprite(spr_button_item, 1, itemX, button_height);
            draw_sprite(spr_button_mercy, 1, mercyX, button_height);
        }else if page = 3
        {
            draw_sprite(spr_button_fight, 1, fightX, button_height);
            draw_sprite(spr_button_act, 1, actX, button_height);
            draw_sprite(spr_button_item, 2, itemX, button_height);
            draw_sprite(spr_button_mercy, 1, mercyX, button_height);
        }else if page = 4
        {
            draw_sprite(spr_button_fight, 1, fightX, button_height);
            draw_sprite(spr_button_act, 1, actX, button_height);
            draw_sprite(spr_button_item, 1, itemX, button_height);
            draw_sprite(spr_button_mercy, 2, mercyX, button_height);
        }else if page = 5
        {
            draw_sprite(spr_button_fight, 1, fightX, button_height);
            draw_sprite(spr_button_act, 2, actX, button_height);
            draw_sprite(spr_button_item, 1, itemX, button_height);
            draw_sprite(spr_button_mercy, 1, mercyX, button_height);
        }
    }
    
    draw_name_level(30, 400, 93);
    draw_hp(275, 400, 25);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw enemy health

if page = 1
{
    var i = 0;
    for (i=0;i&lt;instance_number(Enemy);i++)
    {
        var en = instance_find(Enemy,i);
        draw_sprite_ext(sprBar2, 0, 302, 280 + 32*i, 100, 1, 0, c_red, 1);
        draw_sprite_ext(sprBar2, 0, 302, 280 + 32*i, (en.hp/en.maxHP*100), 1, 0, c_lime, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>battleView = 1;
width = 564;
height = 130;
xPos = ((view_wview[0] - width) / 2) - 1;
yPos = view_hview[0] - 95 - height;
target_width = width;
target_height = height;
state = 0;
spd = 20;
success = 0;
def = 0;
shakeX = 0;
shakeY = 0;
ySPD = 0;
xSPD = 0;
yChange = 0;
xChange = 0;
set_battle_window();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 1 || state = 2
{
    success = 0;
    wBorderChangeSpeed = sign(targetWidth - width) * spd;
    hBorderChangeSpeed = sign(targetHeight - height) * spd / 2;
    if abs(targetWidth - width) &lt; spd
    {
        width = targetWidth;
        success++;
    }
    else
    {
        width += wBorderChangeSpeed;
    }
    if abs(targetHeight - height) &lt; spd
    {
        height = targetHeight;
        success++;
    }
    else
    {
        height += hBorderChangeSpeed;
    }
    
    xPos = ((view_wview[0] - width) / 2) - 1;
    yPos = view_hview[0] - 95 - height;
    
    if success = 2
    {
        if state = 2
        {
            with TurnCont
            {
                event_user(1);
            }
        }
        state = 0;
    }
}

if abs(shakeX) &gt; 1
{
    shakeX *= .8;
}
else
{
    shakeX = 0;
}
if abs(shakeY) &gt; 1
{
    shakeY *= .8;
}
else
{
    shakeY = 0;
}

if ySPD != 0
{
    yPos += ySPD;
}
if xSPD != 0
{
    xPos += xSPD;
}
if yChange != 0
{
    height += yChange;
}
if xChange != 0
{
    width += xChange;
}

set_battle_window();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current = battleView
{
    exit;
}
border_draw(xPos + shakeX, yPos + shakeY, xPos + width + 1 + shakeX, yPos + height + shakeY, 5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

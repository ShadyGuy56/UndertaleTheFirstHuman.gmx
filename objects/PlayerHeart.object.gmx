<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHeart</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprHeartMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum PLAYER_STATE {red, blue, yellow, purple, green};
currentState = PLAYER_STATE.red;
targetState = PLAYER_STATE.red;
height = 8;
width = 8;
spd = 5;
state = 0;
image_speed = 0;
active = 0;
alive = 1;
ySPD = 0;
grav = .5;
jumpPOW = 8;
moving = false;
oldX = x;
oldY = y;
dir = 0;
changingState = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flash
if bleeps &gt; 0 &amp;&amp; alive = 1
{
    bleeps--;
    image_alpha = 1.5 - image_alpha;
    alarm[0] = 2;
}
else
{
    state = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States
if alive = 1 &amp;&amp; changingState = 0
{
    switch(currentState)
    {
        case PLAYER_STATE.red:
            image_blend = c_red;
            break;
        case PLAYER_STATE.blue:
            image_blend = c_blue;
            break;
        case PLAYER_STATE.yellow:
            image_blend = c_yellow;
            break;
        case PLAYER_STATE.purple:
            image_blend = c_purple;
            break;
        case PLAYER_STATE.green:
            image_blend = c_green;
            mask_index = sprGreenMask;
            break;
    }
    if PlayerMenuCont.hp = 0
    {
        audio_stop_all();
        audio_play_sound(sndPlayerDeath,0,false);
        instance_deactivate_all(true);
        instance_activate_object(GlobalCont);
        instance_activate_object(KeyCont);
        visible = 1;
        with GlobalCont
        {
            timeline_index = player_death;
            timeline_position = 0;
            timeline_running = true;
        }
        active = 0;
        alive = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init behavior
if active = 0
{
    ySPD = 0;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red behavior
if currentState = PLAYER_STATE.red
{
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }

    //Horizontal movement
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blue behavior
if currentState = PLAYER_STATE.blue
{
    y += ySPD;
    ySPD += grav;
    if ySPD &lt; 0 &amp;&amp; KeyCont.key_up[0] = 0
    {
        ySPD *= 0.4;
    }
    if y + height &gt;= BattleWindowCont.yPos + BattleWindowCont.height
    {
        ySPD = 0;
        y = BattleWindowCont.yPos + BattleWindowCont.height - height;
        if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
        {
            ySPD = -jumpPOW;
        }
    }
    
    //Horizontal movement
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Green behavior
dirX = sign(KeyCont.key_right[0]) - sign(KeyCont.key_left[0]);
dirY = sign(KeyCont.key_down[0]) - sign(KeyCont.key_up[0]);
if abs(dirX) + abs(dirY) != 0
{
    dir = point_direction(x,y,x+dirX,y+dirY);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stay in bounds
if x + width &gt; BattleWindowCont.xPos + BattleWindowCont.width
{
    x = BattleWindowCont.xPos + BattleWindowCont.width - width;
}
if x - width &lt; BattleWindowCont.xPos
{
    x = BattleWindowCont.xPos + width;
}
if y + height &gt; BattleWindowCont.yPos + BattleWindowCont.height
{
    y = BattleWindowCont.yPos + BattleWindowCont.height - height;
}
if y -height &lt; BattleWindowCont.yPos
{
    y = BattleWindowCont.yPos + height;
}

if x = oldX &amp;&amp; y = oldY
{
    moving = false;
}
else
{
    moving = true;
}

oldX = x;
oldY = y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing color
if changingState = 1
{
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw mechanics
if active = 0
{
    draw_self();
}
else
{
    if view_current = 1
    {
        draw_self();
    }
}

if currentState = PLAYER_STATE.green &amp;&amp; active = 1
{
    draw_sprite(sprHeartCircle,0,x,y);
    draw_sprite_ext(sprHeartShield,0,x,y,image_xscale,image_yscale,dir,c_white,image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

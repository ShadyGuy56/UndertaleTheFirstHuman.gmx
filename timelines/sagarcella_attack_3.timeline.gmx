<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if PlayerHeart.currentState != PLAYER_STATE.green
{
    PlayerHeart.active = 0;
    targetState = PLAYER_STATE.green;
    timeline_index = sagarcella_change_state;
    timeline_position = 0;
    timeline_running = true;
    exit;
}

with BattleWindowCont
{
    yChange = -10;
    ySPD = -10;
}
PlayerHeart.vspeed = -10;

instance_create(0,0,BattleMist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>5</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with BattleWindowCont
{
    yChange = 0;
    ySPD = 0;
}
PlayerHeart.vspeed = 0;
repeat(intensity)
{
    var angle = 0;
    var dist = 150;
    var xPlace = 0;
    var yPlace = 0;
    var tries = 0;
    do {
        angle = irandom(360);
        angle = (angle mod 45) * 45;
        xPlace = (cos(degtorad(angle)) * dist)+PlayerHeart.x;
        yPlace = (sin(degtorad(angle)) * dist)+PlayerHeart.y;
        tries++;
    } until instance_position(xPlace,yPlace,CactusThornShooter) = noone || tries &gt; 50;
    if instance_position(xPlace,yPlace,CactusThornShooter) = noone
    {
        var inst = instance_create(xPlace, yPlace, CactusThornShooter);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>195</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with BattleWindowCont
{
    yChange = 10;
    ySPD = 10;
}

PlayerHeart.vspeed = 10;

with CactusThornShooter
{
    instance_destroy();
}
with CactusThorn
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>200</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with BattleWindowCont
{
    yChange = 0;
    ySPD = 0;
}
PlayerHeart.vspeed = 0;

with TurnCont
{
    event_user(0);
}

with BattleMist
{
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
